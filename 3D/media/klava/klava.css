* {
    box-sizing: border-box;
    font-family: sans-serif;
  }
  
  #dark {
    display: none;
    
    &:not(:checked) {
      ~ .dark { display: none; }
      ~ .wrapper { --l: 15%; }
    }
    
    &:checked {
      ~ .light { display: none; }
      ~ .wrapper { --l: 75%; }
    }
  }
  
  label {
    user-select: none;
    cursor: pointer;
    font-size: 32px;
    position: fixed;
    top: 4px;
    right: 4px;
  }
  
  .wrapper {
    background-color: hsl(240deg, 20%, calc(var(--l) - 10%));
    position: fixed;
    inset: 0;
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: -1;
  }
  
  .keyboard {
    --size: min(80vh, 80vw);
    --btn-height: calc(var(--size) * .025);
    display: flex;
    gap: 2em;
    font-size: calc(var(--size) * .0175);
    background-color: hsl(240deg, 20%, calc(var(--l)));
    padding: 1em;
    position: relative;
    transform-style: preserve-3d;
    transform: perspective(800px) rotateX(40deg) rotateZ(40deg);
    animation: color-shift 30s infinite linear;
    transition: 100ms ease-out;
    
    &:before, &:after {
      content: "";
      position: absolute;
      transition: 100ms ease-out;
    }
    
    &:before {
      width: 100%;
      height: calc(var(--btn-height) * 1.5);
      top: 100%;
      left: 0;
      background-color: hsl(240deg, 20%, calc(var(--l) - 5%));
      transform-origin: top center;
      transform: rotateX(-90deg);
    }
    
    &:after {
      width: calc(var(--btn-height) * 1.5);
      height: 100%;
      top: 0;
      left: 100%;
      background-color: hsl(240deg, 20%, calc(var(--l) + 5%));
      transform-origin: center left;
      transform: rotateY(90deg);
    }
    
    * { transform-style: preserve-3d; }
    
    .small p {
      font-size: .75em;
    }
    
    p {
      margin: 0;
      color: var(--color);
      font-weight: bold;
      height: calc(var(--size) * .05);
      min-width: calc(var(--size) * .045);
      text-align: center;
      padding: .25em;
      background-color: hsl(240deg, 20%, calc(var(--l) + 5%));
      position: relative;
      transform: translateZ(var(--btn-height));
      transition: 100ms ease-out;
      flex-grow: 1;
      text-shadow: 0 0 .125em var(--color);
      
      &:hover {
        transform: translateZ(calc(var(--btn-height) * .5));
        text-shadow: 0 0 .25em var(--color);
      }
      
      &:before, &:after {
        content: "";
        position: absolute;
        transition: 200ms ease-out;
      }
      
      &:before {
        height: var(--btn-height);
        width: 100%;
        top: 100%;
        left: 0;
        background-color: hsl(240deg, 20%, calc(var(--l)));
        transform-origin: top center;
        transform: rotateX(-90deg);
      }
      
      &:after {
        height: 100%;
        width: var(--btn-height);
        top: 0;
        left: 100%;
        background-color: hsl(240deg, 20%, calc(var(--l) + 10%));
        transform-origin: center left;
        transform: rotateY(90deg);
      }
    }
    
    .left {
      display: flex;
      flex-direction: column;
      gap: 1.5em;
      
      .top {
        display: flex;
        gap: 3em;
        
        .fn-keys {
          display: flex;
          gap: 1em;
        }
        
        .group {
          display: flex;
          gap: .25em;
        }
      }
      
      .main {
        display: flex;
        flex-direction: column;
        gap: .75em;
  
        .row {
          display: flex;
          gap: .25em;
        }
      }
    }
    
    .right {
      display: flex;
      flex-direction: column;
      justify-content: space-between;
      
      .group {
        display: flex;
        flex-direction: column;
        gap: .75em;
      }
      
      .row {
        display: flex;
        gap: .25em;
      }
      
      .top {
        display: flex;
        flex-direction: column;
        gap: 1.5em;
      }
      
      .arrows {
        display: flex;
        gap: .75em .25em;
        
        .group {
          gap: 0;
        }
      }
    }
    
    .glow {
      background-color: var(--color);
      padding: .25em;
    }
  }
  
  @keyframes color-shift {
    0% {
      --color: hsl(0deg, 100%, 50%);
      transform: perspective(1800px) rotateX(30deg) rotateZ(40deg);
    }
    12.5% {--color: hsl(45deg, 100%, 50%)}
    25% {--color: hsl(90deg, 100%, 50%)}
    37.5% {--color: hsl(135deg, 100%, 50%)}
    50% {
      --color: hsl(180deg, 100%, 50%);
      transform: perspective(1800px) rotateX(60deg) rotateZ(80deg);
    }
    62.5% {--color: hsl(225deg, 100%, 50%)}
    75% {--color: hsl(270deg, 100%, 50%)}
    87.5% {--color: hsl(315deg, 100%, 50%)}
    100% {
      --color: hsl(360deg, 100%, 50%);
      transform: perspective(1800px) rotateX(30deg) rotateZ(40deg);
    }
  }
  
  @property --color {
    syntax: "<color>";
    initial-value: yellow;
    inherits: true;
  }